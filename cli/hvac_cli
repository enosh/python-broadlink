#!/usr/bin/env python3
import argparse
from pprint import pprint

import broadlink
from broadlink.climate import hvac



parser = argparse.ArgumentParser(fromfile_prefix_chars='@')
parser.add_argument("--type", type=lambda i: int(i, 0), default=0x2712, help="type of device", required=True)
parser.add_argument("--host", help="host address", required=True)
parser.add_argument("--mac", help="mac address (hex reverse), as used by python-broadlink library", required=True)
parser.add_argument("-on", help="power on", default=None, action='store_true')
parser.add_argument("-off", help="power off", default=None, action='store_true')
parser.add_argument("--ttemp", help="target temp", default=None, type=int)
parser.add_argument("--mode", help="mode, HEAT, COOL, AUTO DRY", default=None)
parser.add_argument("--display", help="ON/OFF", default=None)
parser.add_argument("-state", help="Dispaly current state", default=None, action='store_true')



args = parser.parse_args()


type = args.type
host = args.host
mac = bytearray.fromhex(args.mac)

dev: hvac = broadlink.gendevice(type, (host, 80), mac)

dev.auth()
state = dev.get_state()
if args.state:
    print('== State ==')
    pprint(state)
old_state = state.copy()
if args.on:
    state['power'] = True
if args.off:
    state['power'] = False
if args.ttemp:
    state['target_temp'] = args.ttemp
if args.mode:
    state['mode'] = args.mode
if args.display:    
    state['display'] = True if args.display == 'OFF' else False
    
if state != old_state:
    dev.set_state(**state)

